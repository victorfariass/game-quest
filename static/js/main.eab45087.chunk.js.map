{"version":3,"sources":["reducers/login.js","reducers/index.js","store/index.js","pages/Login.js","pages/Settings.js","components/Header.js","pages/Game.js","pages/Feedback.js","pages/NotFound.js","serviceWorker.js","index.js","App.js"],"names":["INITIAL_STATE","score","userr","name","email","user","state","action","type","feed","rootReducer","combineReducers","login","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducerAll","applyMiddleware","thunk","Login","handleInput","bind","validar","getToken","setToken","APIQuestions","getQuestionsAndAnswers","logado","questions","redirect","fetch","request","json","token","this","tokenn","localStorage","setItem","obj","player","assertions","gravatarEmail","JSON","stringify","console","log","i","length","push","question","categories","category","correctsAnswers","correct_answer","wrongAnswers","incorrect_answers","difficulty","setState","event","target","value","props","tokeen","getItem","endpoint","response","data","results","Error","to","className","placeholder","data-testid","onChange","disabled","onClick","a","async","Component","connect","dispatch","Settings","Header","src","md5","alt","Game","number","hidden","timer","red","green","renderQuestion","cronometro","changeQuestion","scoreCalculator","setInterval","anterior","lock","history","feedback","question1","answer","wrongs","map","item","index","key","Feedback","countCorrect","stringfy","phrase","parse","NotFound","Boolean","location","hostname","match","ReactDOM","render","exact","path","component","Ranking","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eab45087.chunk.js","sourcesContent":["// import { LOGIN } from '../actions/login';\n\nconst INITIAL_STATE = {\n  score: 0,\n  userr: {\n    name: '',\n    email: '',\n  } };\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return { ...state, userr: action.user };\n  case 'FEEDBACK':\n    return { ...state, score: action.feed };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import { combineReducers } from 'redux';\nimport login from './login';\n\nconst rootReducer = combineReducers({ login });\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducerAll from '../reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducerAll, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.handleInput = this.handleInput.bind(this);\n    this.validar = this.validar.bind(this);\n    this.getToken = this.getToken.bind(this);\n    this.setToken = this.setToken.bind(this);\n    this.APIQuestions = this.APIQuestions.bind(this);\n    this.getQuestionsAndAnswers = this.getQuestionsAndAnswers.bind(this);\n    this.logado = this.logado.bind(this);\n    this.state = {\n      userr: {\n        questions: [],\n        name: '',\n        email: '',\n      },\n      redirect: false };\n  }\n\n  async getToken() {\n    const endpoint = 'https://opentdb.com/api_token.php?command=request';\n    const request = await fetch(endpoint);\n    const json = await request.json();\n    return json.token;\n  }\n\n  async setToken() {\n    const tokenn = await this.getToken();\n    localStorage.setItem('token', tokenn);\n    const obj = { player: { name: '',\n      assertions: 0,\n      score: 0,\n      gravatarEmail: '' } };\n    const player = JSON.stringify(obj);\n    localStorage.setItem('state', player);\n  }\n\n  async getQuestionsAndAnswers() {\n    const { userr } = this.state;\n    const json = await this.APIQuestions();\n    console.log(json, 'json');\n    const questions = [];\n    for (let i = 0; i < json.length; i += 1) {\n      questions.push(json[i].question);\n    }\n    const categories = [];\n    for (let i = 0; i < json.length; i += 1) {\n      categories.push(json[i].category);\n    }\n    const correctsAnswers = [];\n    for (let i = 0; i < json.length; i += 1) {\n      correctsAnswers.push(json[i].correct_answer);\n    }\n    const wrongAnswers = [];\n    for (let i = 0; i < json.length; i += 1) {\n      wrongAnswers.push(json[i].incorrect_answers);\n    }\n    const difficulty = [];\n    for (let i = 0; i < json.length; i += 1) {\n      difficulty.push(json[i].difficulty);\n    }\n    this.setState({ userr: { ...userr,\n      categories,\n      questions,\n      correctsAnswers,\n      wrongAnswers,\n      difficulty,\n    } });\n    this.logado();\n  }\n\n  handleInput(event) {\n    const { name, value } = event.target;\n    const { userr } = this.state;\n    this.setState({ userr: { ...userr,\n      [name]: value,\n    } });\n  }\n\n  logado() {\n    const { userr } = this.state;\n    const { login } = this.props;\n    login(userr);\n    this.setState({ redirect: true });\n  }\n\n  async APIQuestions() {\n    try {\n      const tokeen = localStorage.getItem('token');\n      const endpoint = `https://opentdb.com/api.php?amount=5&token=${tokeen}`;\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      return data.results;\n    } catch (error) {\n      throw new Error(`${error}`);\n    }\n  }\n\n  validar() {\n    const { userr } = this.state;\n    return userr.name && userr.email;\n  }\n\n  render() {\n    const { userr, redirect } = this.state;\n    return (redirect\n      ? <Redirect to=\"./game\" />\n\n      : (\n        <div className=\"login\">\n          <main className=\"main\">\n            <div className=\"form\">\n              <input\n                className=\"input text\"\n                type=\"name\"\n                name=\"name\"\n                placeholder=\"Name\"\n                data-testid=\"input-player-name\"\n                value={ userr.name }\n                onChange={ this.handleInput }\n              />\n              <input\n                className=\"input text\"\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                data-testid=\"input-gravatar-email\"\n                value={ userr.email }\n                onChange={ this.handleInput }\n\n              />\n\n              <button\n                className=\"input\"\n                type=\"button\"\n                disabled={ !this.validar() }\n                data-testid=\"btn-play\"\n                onClick={ async () => {\n                  await this.setToken();\n                  this.getQuestionsAndAnswers();\n                } }\n\n              >\n                Play\n              </button>\n\n              <Link to=\"./settings\" data-testid=\"btn-settings\" className=\"engrenagem\">\n                <div className=\"engrenagem\" />\n              </Link>\n            </div>\n          </main>\n        </div>)\n    );\n  }\n}\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch({ type: 'LOGIN', user }),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\n\nclass Settings extends Component {\n  render() {\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Settings</h1>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\n\nclass Header extends Component {\n  render() {\n    const { userr, score } = this.props;\n    return (\n      <header>\n        <img\n          src={ `https://www.gravatar.com/avatar/${md5(userr.email)}` }\n          alt=\"gravatar imagem\"\n          data-testid=\"header-profile-picture\"\n        />\n        <p data-testid=\"header-player-name\">{ userr.name }</p>\n        <p data-testid=\"header-score\">{ score }</p>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  score: PropTypes.number.isRequired,\n  userr: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  score: state.login.score,\n  userr: state.login.userr,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\n// import { changeState } from '../actions';\n\nclass Game extends Component {\n  constructor() {\n    super();\n    this.state = {\n      number: 0,\n      hidden: true,\n      timer: 30,\n      red: '',\n      green: '',\n      score: 0,\n      assertions: 0,\n    };\n\n    this.renderQuestion = this.renderQuestion.bind(this);\n    this.cronometro = this.cronometro.bind(this);\n    this.changeQuestion = this.changeQuestion.bind(this);\n    this.scoreCalculator = this.scoreCalculator.bind(this);\n  }\n\n  componentDidMount() {\n    const seg = 1000;\n    setInterval(this.cronometro, seg);\n  }\n\n  cronometro() {\n    const { timer } = this.state;\n    if (timer > 0) {\n      this.setState((anterior) => ({\n        ...anterior,\n        timer: anterior.timer - 1,\n      }));\n    } else {\n      this.setState({\n        timer: 0,\n        lock: true,\n      });\n    }\n  }\n\n  changeQuestion() {\n    let { number } = this.state;\n    const { history } = this.props;\n    const maxQuestionsLenght = 4;\n    if (number < maxQuestionsLenght) {\n      this.setState({ green: '',\n        red: '',\n        number: number += 1,\n        hidden: true,\n        timer: 30,\n        lock: false,\n      });\n    } else {\n      history.push('./feedback');\n    }\n  }\n\n  scoreCalculator() {\n    const { timer, number } = this.state;\n    let { assertions, score } = this.state;\n    const { difficulty, name, gravatarEmail, feedback } = this.props;\n    const pointCount = 10;\n    const hard = 3;\n    const medium = 2;\n    const easy = 1;\n    let difficultyCalculator = 0;\n    if (difficulty[number] === 'easy') {\n      difficultyCalculator = easy;\n    } else if (difficulty[number] === 'medium') {\n      difficultyCalculator = medium;\n    } else {\n      difficultyCalculator = hard;\n    }\n\n    score += pointCount + (timer * difficultyCalculator);\n    this.setState({ score,\n      assertions: assertions += 1,\n    });\n    const obj = { player: { name,\n      assertions,\n      score,\n      gravatarEmail } };\n    const player = JSON.stringify(obj);\n    localStorage.setItem('state', player);\n    feedback(score);\n  }\n\n  renderQuestion() {\n    const { questions, wrongAnswers,\n      correctsAnswers, categories, difficulty } = this.props;\n    const { number, lock, timer } = this.state;\n    const { green, red, hidden } = this.state;\n    const question1 = questions[number];\n    const answer = correctsAnswers[number];\n    const wrongs = wrongAnswers[number];\n    const category = categories[number];\n    return (\n      <div>\n        <div>{timer}</div>\n        <h2 data-testid=\"question-category\">\n          {' '}\n          Categoria :\n          {' '}\n          {category}\n\n        </h2>\n        {' '}\n        <h2 data-testid=\"question-category\">\n          {' '}\n          Dificuldade :\n          {' '}\n          {difficulty[number]}\n\n        </h2>\n        <h1 data-testid=\"question-text\">{question1}</h1>\n\n        <button\n          type=\"button\"\n          disabled={ lock }\n          onClick={ () => {\n            this.setState({ green: 'green',\n              red: 'red',\n              hidden: false,\n            }, () => this.scoreCalculator());\n          } }\n          data-testid=\"correct-answer\"\n          className={ green }\n        >\n          {answer}\n\n        </button>\n\n        {wrongs && wrongs.map((item, index) => (\n          <button\n            type=\"button\"\n            key={ item }\n            data-testid={ `wrong-answer-${index}` }\n            className={ red }\n            onClick={ () => {\n              this.setState({ green: 'green',\n                red: 'red',\n                hidden: false,\n              });\n            } }\n          >\n            {item}\n          </button>\n        ))}\n        <button\n          hidden={ hidden }\n          type=\"button\"\n          data-testid=\"btn-next\"\n          onClick={ this.changeQuestion }\n        >\n          Próxima\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        {this.renderQuestion()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  correctsAnswers: state.login.userr.correctsAnswers,\n  wrongAnswers: state.login.userr.wrongAnswers,\n  categories: state.login.userr.categories,\n  questions: state.login.userr.questions,\n  difficulty: state.login.userr.difficulty,\n  name: state.login.userr.name,\n  gravatarEmail: state.login.userr.email,\n});\n\nGame.propTypes = {\n  questions: PropTypes.shape.isRequired,\n  wrongAnswers: PropTypes.shape.isRequired,\n  categories: PropTypes.shape.isRequired,\n  correctsAnswers: PropTypes.shape.isRequired,\n  difficulty: PropTypes.shape.isRequired,\n  history: PropTypes.string.isRequired,\n  feedback: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  feedback: (feed) => dispatch({ type: 'FEEDBACK', feed }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Feedback extends Component {\n  constructor() {\n    super();\n    this.feedback = this.feedback.bind(this);\n    this.countCorrect = this.countCorrect.bind(this);\n  }\n\n  feedback() {\n    const stringfy = localStorage.getItem('state');\n    const parse = JSON.parse(stringfy);\n    const { assertions } = parse.player;\n    let phrase = '';\n    const goodMedia = 3;\n    if (assertions < goodMedia) {\n      phrase = 'Podia ser melhor...';\n    } else {\n      phrase = 'Mandou bem!';\n    }\n    return (<h2 data-testid=\"feedback-text\">{phrase}</h2>);\n  }\n\n  countCorrect() {\n    const stringfy = localStorage.getItem('state');\n    const parse = JSON.parse(stringfy);\n    return (\n      <div>\n        1\n        {' '}\n        <h3 data-testid=\"feedback-total-question\">\n          {parse.player.assertions}\n        </h3>\n        <h3 data-testid=\"feedback-total-score\">\n          {parse.player.score}\n        </h3>\n      </div>);\n  }\n\n  render() {\n    const { history } = this.props;\n    return (\n      <div>\n        <Header />\n        {this.feedback()}\n        {this.countCorrect()}\n        <button\n          data-testid=\"btn-play-again\"\n          type=\"button\"\n          onClick={ () => history.push('/') }\n        >\n          Jogar novamente\n        </button>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.string.isRequired,\n};\nexport default Feedback;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"notFoundfundo\">\n        <div className=\"notFound\">\n          <h1> Página Não Encontrada</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport './App.css';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport NotFound from './pages/NotFound';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/game\" component={ Game } />\n          <Route exact path=\"/feedback\" component={ Feedback } />\n          <Route exact path=\"/settings\" component={ Settings } />\n          <Route exact path=\"/ranking\" component={ Ranking } />\n          <Route component={ NotFound } />\n        </Switch>\n      </BrowserRouter>\n\n    </div>\n  );\n}\n"],"sourceRoot":""}